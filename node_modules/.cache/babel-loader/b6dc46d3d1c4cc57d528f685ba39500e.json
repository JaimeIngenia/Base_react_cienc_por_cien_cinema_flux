{"ast":null,"code":"import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/movies/\";\nexport function getMovies() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n}\nexport function getCategoriaOracleBySlug(slug) {\n  return fetch(baseUrl + \"?codigoSeguridad=\" + slug).then(response => {\n    if (!response.ok) throw new Error(\"Network response was not ok.\");\n    return response.json().then(courses => {\n      if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\n      return courses[0]; // should only find one course for a given slug, so return it.\n    });\n  }).catch(handleError);\n}\nexport function saveCategoriaOracle(course) {\n  return fetch(baseUrl + (course.id || \"\"), {\n    method: course.id ? \"PUT\" : \"POST\",\n    // POST for create, PUT to update when id already exists.\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      ...course,\n      // Parse authorId to a number (in case it was sent as a string).\n      authorId: parseInt(course.authorId, 10)\n    })\n  }).then(handleResponse).catch(handleError);\n}\nexport function deleteCategoriaOracle(courseId) {\n  return fetch(baseUrl + courseId, {\n    method: \"DELETE\"\n  }).then(handleResponse).catch(handleError);\n}","map":{"version":3,"names":["handleResponse","handleError","baseUrl","process","env","REACT_APP_API_URL","getMovies","fetch","then","catch","getCategoriaOracleBySlug","slug","response","ok","Error","json","courses","length","saveCategoriaOracle","course","id","method","headers","body","JSON","stringify","authorId","parseInt","deleteCategoriaOracle","courseId"],"sources":["C:/Users/ASUS/OneDrive/Documentos/1aaaaEsposo_Jaime/U_Trabajo/React_notas_clave_bases/Base_cien_x_cien_24_oct_cinema_flux/src/api/MovieApi.js"],"sourcesContent":["import { handleResponse, handleError } from \"./apiUtils\";\r\n\r\nconst baseUrl = process.env.REACT_APP_API_URL + \"/movies/\";\r\n\r\n\r\nexport function getMovies() {\r\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\r\n}\r\n\r\n\r\n\r\nexport function getCategoriaOracleBySlug(slug) {\r\n  return fetch(baseUrl + \"?codigoSeguridad=\" + slug)\r\n    .then((response) => {\r\n      if (!response.ok) throw new Error(\"Network response was not ok.\");\r\n      return response.json().then((courses) => {\r\n        if (courses.length !== 1) throw new Error(\"Course not found: \" + slug);\r\n        return courses[0]; // should only find one course for a given slug, so return it.\r\n      });\r\n    })\r\n    .catch(handleError);\r\n}\r\n\r\nexport function saveCategoriaOracle(course) {\r\n  return fetch(baseUrl + (course.id || \"\"), {\r\n    method: course.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\r\n    headers: { \"content-type\": \"application/json\" },\r\n    body: JSON.stringify({\r\n      ...course,\r\n      // Parse authorId to a number (in case it was sent as a string).\r\n      authorId: parseInt(course.authorId, 10),\r\n    }),\r\n  })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n\r\nexport function deleteCategoriaOracle(courseId) {\r\n  return fetch(baseUrl + courseId, { method: \"DELETE\" })\r\n    .then(handleResponse)\r\n    .catch(handleError);\r\n}\r\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,WAAW,QAAQ,YAAY;AAExD,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,GAAG,UAAU;AAG1D,OAAO,SAASC,SAASA,CAAA,EAAG;EAC1B,OAAOC,KAAK,CAACL,OAAO,CAAC,CAACM,IAAI,CAACR,cAAc,CAAC,CAACS,KAAK,CAACR,WAAW,CAAC;AAC/D;AAIA,OAAO,SAASS,wBAAwBA,CAACC,IAAI,EAAE;EAC7C,OAAOJ,KAAK,CAACL,OAAO,GAAG,mBAAmB,GAAGS,IAAI,CAAC,CAC/CH,IAAI,CAAEI,QAAQ,IAAK;IAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,8BAA8B,CAAC;IACjE,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAACP,IAAI,CAAEQ,OAAO,IAAK;MACvC,IAAIA,OAAO,CAACC,MAAM,KAAK,CAAC,EAAE,MAAM,IAAIH,KAAK,CAAC,oBAAoB,GAAGH,IAAI,CAAC;MACtE,OAAOK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC;EACJ,CAAC,CAAC,CACDP,KAAK,CAACR,WAAW,CAAC;AACvB;AAEA,OAAO,SAASiB,mBAAmBA,CAACC,MAAM,EAAE;EAC1C,OAAOZ,KAAK,CAACL,OAAO,IAAIiB,MAAM,CAACC,EAAE,IAAI,EAAE,CAAC,EAAE;IACxCC,MAAM,EAAEF,MAAM,CAACC,EAAE,GAAG,KAAK,GAAG,MAAM;IAAE;IACpCE,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnB,GAAGN,MAAM;MACT;MACAO,QAAQ,EAAEC,QAAQ,CAACR,MAAM,CAACO,QAAQ,EAAE,EAAE;IACxC,CAAC;EACH,CAAC,CAAC,CACClB,IAAI,CAACR,cAAc,CAAC,CACpBS,KAAK,CAACR,WAAW,CAAC;AACvB;AAEA,OAAO,SAAS2B,qBAAqBA,CAACC,QAAQ,EAAE;EAC9C,OAAOtB,KAAK,CAACL,OAAO,GAAG2B,QAAQ,EAAE;IAAER,MAAM,EAAE;EAAS,CAAC,CAAC,CACnDb,IAAI,CAACR,cAAc,CAAC,CACpBS,KAAK,CAACR,WAAW,CAAC;AACvB"},"metadata":{},"sourceType":"module"}